package iiproyecto;

import java_cup.runtime.*;

/* Condigo personalizado para el parser */
parser code
{:
    //Metodo al que se llama automaticamente ante algun error sintactico
    public void syntax_error(Symbol s)
    {
        String lexema = s.value.toString();
        int fila = s.right;
        int columna = s.left;
        
        System.out.println("Error sintactico en la fila " + fila + ", columna " + columna + ": Token inesperado <" + lexema + ">");
    }

    //Metodo al que se llama en el momento en que ya no es posible una recuperacion de errores
    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception
    {
        String lexema = s.value.toString();
        int fila = s.right;
        int columna = s.left;
        
        System.out.println("¡No se pudo recuperar!");
        System.out.println("Terror sintactico en la fila " + fila + ", columna " + columna + ": Token inesperado <" + lexema + ">");
    }
:}

/* Declaración de terminales */
terminal String    smbbreak,
            smbcase,
            smbchar,
            smbconst,
            smbcontinue,
            smbdefault,
            smbdo,
            smbelse,
            smbfor,
            smbif,
            smbint,
            smblong,
            smbreturn,
            smbshort,
            smbswitch,
            smbvoid,
            smbwhile;

terminal String    smbread,
            smbwrite;

terminal String    smbigualigual,
            smbmayorigual,
            smbmayor,
            smbmenorigual,
            smbmenor,
            smbdiferente,
            smbor,
            smband,
            smbadmiracion,
            smbmasmas,
            smbmenosmenos,
            smbigual,
            smbmas,
            smbmenos,
            smbmultiplicacion,
            smbdivision,
            smbdivisionentera,
            smbmasigual,
            smbmenosigual,
            smbmultiplicacionigual,
            smbdivisionigual;

terminal String    smbcoma,
            smbpuntocoma,
            smbparentabrir,
            smbparentcerrar,
            smbcuadradoabrir,
            smbcuadradocerrar,
            smbllaveabrir,
            smbllavecerrar;

terminal String smbstring;

/* Declaracíon de no terminales */
non terminal String INICIO, TIPOVAR, TIPOFUNC;

non terminal String PRUEBA;

/* Precedencia de mayor y menos */

/* Regla inicial */
start with INICIO;

/* Reglas semánticas */
INICIO ::= PRUEBA;

TIPOVAR ::= smbchar:e {: System.out.println("Parser: " + e); :}
            | smbint:e {: System.out.println("Parser: " + e); :}
            | smblong:e {: System.out.println("Parser: " + e); :}
            | smbshort:e {: System.out.println("Parser: " + e); :};

TIPOFUNC ::= smbvoid:e {: System.out.println("Parser: " + e); :}
            | smbchar:e {: System.out.println("Parser: " + e); :}
            | smbint:e {: System.out.println("Parser: " + e); :}
            | smblong:e {: System.out.println("Parser: " + e); :}
            | smbshort:e {: System.out.println("Parser: " + e); :};

PRUEBA ::= smbint:e {: System.out.println("Parser: " + e); :};